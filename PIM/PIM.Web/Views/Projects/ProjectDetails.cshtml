@model PIM.Web.Models.ProjectFormViewModel
@{
    ViewBag.Title = "ProjectDetails";
    Layout = "~/Views/Shared/_CustomLayout.cshtml";
}
@using (Html.BeginForm(Model.EditMode ? "Update" : "Create", "Projects"))

{
    if (Model.Exception != null)
    {
        @Html.ValidationSummary(false)
    }
    else
    {
        @Html.ValidationSummary(true, "Please enter all the mandatory fields(*)")
    }

    if (Model.EditMode == true)
    {
        <h4>Edit Project</h4>
    }
    else
    { <h4>New Project</h4>}
    <hr />
    <div class="form-group row">
        @Html.LabelFor(p => p.Project.ProjectNumber, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-3">
            @if (Model.EditMode == true)
            {
                @Html.TextBoxFor(p => p.Project.ProjectNumber, new { style = "background-color: #ced4da", @class = "custom-form-control", @readonly = "readonly" })
            }
            else
            {
                @Html.TextBoxFor(p => p.Project.ProjectNumber, new { style = "width:100%", @class = "custom-form-control" })

            }
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(p => p.Project.Name, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-8">
            @Html.TextBoxFor(p => p.Project.Name, new { @class = "custom-form-control" })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(p => p.Project.Customer, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-8">
            @Html.TextBoxFor(p => p.Project.Customer, new { @class = "custom-form-control" })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(p => p.Project.GroupId, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-3">
            @Html.DropDownListFor(p => p.Project.GroupId, new SelectList(Model.Groups, "ID", "GroupLeader.Visa"), "Select Group", new { @class = "custom-form-control" })
        </div>
    </div>
    <div class="form-group row">

        @Html.LabelFor(p => p.Members, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-8">
            @Html.ListBoxFor(p => p.Members, Model.EmployeesList, new
            {
                @align = "left",
                @class = "custom-form-control chosen-select",
                @title = "Select Multiple Options",
            })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(p => p.Project.Status, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-3">
            @Html.EnumDropDownListFor(p => p.Project.Status, "Select Status", new { @class = "custom-form-control" })
        </div>
    </div>
    <div class="form-group row" id="date">


        @Html.LabelFor(p => p.Project.StartDate, new { @class = "col-sm-2 col-form-label" })

        <div class="col-sm-3">
            @Html.EditorFor(p => p.Project.StartDate, new { htmlAttributes = new { @class = "datepicker custom-form-control" } })
        </div>

        <div class="col-sm-1"><br /></div>
        @Html.LabelFor(p => p.Project.EndDate, new { @class = "col-form-label" })

        <div class="col-sm-3">
            @Html.EditorFor(p => p.Project.EndDate, new { htmlAttributes = new { @class = "datepicker custom-form-control" } })
        </div>
    </div>
    <hr />
    <div>
        @Html.HiddenFor(p => p.Project.ID)
        @Html.HiddenFor(p => p.Project.Version)


    </div>
    <div id="projects-btn" class="row">
        <div class="col-sm-5"><br /></div>
        <div class="col-sm-2">
            <button id="cancel-btn" type="button" class="btn btn-secondary">@Html.ActionLink("Cancel", "Index", "Projects")</button>
        </div>
        <div class="col-sm-1"><br /></div>
        <div class="col-sm-2">
            @if (Model.EditMode == true)
            {
                <button type="submit" class="btn btn-primary">Edit Project</button>

            }
            else
            { <button type="submit" class="btn btn-primary">Create Project</button>}
        </div>
    </div>
}

@section scripts {

    <script>
        $(document).ready(function () {
            $(".datepicker").datepicker({
                dateFormat: "dd.mm.yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-10:+10",
                showOn: "both",
                buttonText: "<i class='fa fa-calendar'></i>"
            });
        })


        $(".chosen-select").chosen();


    </script>

}



